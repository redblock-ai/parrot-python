# pytest.ini
[pytest]
markers =
    Datasets: Test cases for DAO i.e. Datasets
    DatasetsSampleSizeSuccess: Test for successful dataset sample size retrieval.
    DatasetsSampleSizeFailure: Test for failure when invalid dataset sample size is provided.
    OllamaAdapter: Test cases for OllamaAdapter
    OllamaAdapterInitFailure: Test cases for failure scenarios in OllamaAdapter initialization.
    OllamaAdapterInitSuccess: Test cases for success scenarios in OllamaAdapter initialization.
    OllamaAdapterMillionaireTestSuccess: Test cases for success scenarios towards candidate answer generation for the PARROT-Millionaire set.
    OllamaAdapterJeopardyTestSuccess: Test cases for success scenarios towards candidate answer generation for the PARROT-Jeopardy set.
    MillionaireMetric: Test cases for MillionaireMetric module.
    MillionaireMetricInitSuccess: Test case for successful initialization of MillionaireMetric.
    MillionaireMetricInitFailure: Test for failure cases towards initialization of MillionaireMetric.
    MillionaireMetricScoreGeneration: Test case for successful evaluation per-sample using MillionaireMetric module.
    JeopardyMetric: Test cases for JeopardyMetric module.
    JeopardyMetricInitSuccess: Test case for successful initialization of JeopardyMetric.
    JeopardyMetricInitFailure: Test for failure cases towards initialization of JeopardyMetric.
    JeopardyMetricScoreGeneration: Test case for successful evaluation per-sample using JeopardyMetric module.
    OpenAdapter: Test cases for OpenAdapter
    OpenAdapterInitFailure: Test cases for failed scenarios, such as authentication error, invalid params etc.
    OpenAdapterInitSuccess: Test cases for successful initialization of OpenAdapter.
    OpenAdapterMillionaireTestSuccess: Test cases for success scenarios towards candidate answer generation for the PARROT-Millionaire set from OpenAI.
    OpenAdapterJeopardyTestSuccess: Test cases for success scenarios towards candidate answer generation for the PARROT-Jeopardy set from OpenAI.
    